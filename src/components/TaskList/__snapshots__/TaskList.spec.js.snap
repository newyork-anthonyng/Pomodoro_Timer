// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render one component per task 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Task
    id="batmanId"
    onDeleteClick={[Function]}
    text="The Dark Knight"
    title="Batman"
/>,
  "nodes": Array [
    <Task
      id="batmanId"
      onDeleteClick={[Function]}
      text="The Dark Knight"
      title="Batman"
/>,
  ],
  "options": Object {},
  "renderer": null,
  "root": ShallowWrapper {
    "complexSelector": ComplexSelector {
      "buildPredicate": [Function],
      "childrenOfNode": [Function],
      "findWhereUnwrapped": [Function],
    },
    "length": 1,
    "node": <glamorous(div)>
      <Task
            id="batmanId"
            onDeleteClick={[Function]}
            text="The Dark Knight"
            title="Batman"
      />
      <Task
            id="supermanId"
            onDeleteClick={[Function]}
            text="Wears red underwear"
            title="Superman"
      />
</glamorous(div)>,
    "nodes": Array [
      <glamorous(div)>
        <Task
                id="batmanId"
                onDeleteClick={[Function]}
                text="The Dark Knight"
                title="Batman"
        />
        <Task
                id="supermanId"
                onDeleteClick={[Function]}
                text="Wears red underwear"
                title="Superman"
        />
</glamorous(div)>,
    ],
    "options": Object {},
    "renderer": ReactShallowRenderer {
      "_instance": ShallowComponentWrapper {
        "_calledComponentWillUnmount": false,
        "_compositeType": 2,
        "_context": Object {},
        "_currentElement": <TaskList
          onDeleteClick={[Function]}
          tasks={
                    Array [
                              Object {
                                "id": "batmanId",
                                "text": "The Dark Knight",
                                "title": "Batman",
                              },
                              Object {
                                "id": "supermanId",
                                "text": "Wears red underwear",
                                "title": "Superman",
                              },
                            ]
          }
/>,
        "_debugID": 1,
        "_hostContainerInfo": null,
        "_hostParent": null,
        "_instance": StatelessComponent {
          "_reactInternalInstance": [Circular],
          "context": Object {},
          "props": Object {
            "onDeleteClick": [Function],
            "tasks": Array [
              Object {
                "id": "batmanId",
                "text": "The Dark Knight",
                "title": "Batman",
              },
              Object {
                "id": "supermanId",
                "text": "Wears red underwear",
                "title": "Superman",
              },
            ],
          },
          "refs": Object {},
          "state": null,
          "updater": Object {
            "enqueueCallback": [Function],
            "enqueueCallbackInternal": [Function],
            "enqueueElementInternal": [Function],
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
            "validateCallback": [Function],
          },
        },
        "_mountOrder": 1,
        "_pendingCallbacks": null,
        "_pendingElement": null,
        "_pendingForceUpdate": false,
        "_pendingReplaceState": false,
        "_pendingStateQueue": null,
        "_renderedComponent": NoopInternalComponent {
          "_currentElement": <glamorous(div)>
            <Task
                        id="batmanId"
                        onDeleteClick={[Function]}
                        text="The Dark Knight"
                        title="Batman"
            />
            <Task
                        id="supermanId"
                        onDeleteClick={[Function]}
                        text="Wears red underwear"
                        title="Superman"
            />
</glamorous(div)>,
          "_debugID": 2,
          "_renderedOutput": <glamorous(div)>
            <Task
                        id="batmanId"
                        onDeleteClick={[Function]}
                        text="The Dark Knight"
                        title="Batman"
            />
            <Task
                        id="supermanId"
                        onDeleteClick={[Function]}
                        text="Wears red underwear"
                        title="Superman"
            />
</glamorous(div)>,
        },
        "_renderedNodeType": 1,
        "_rootNodeID": 0,
        "_topLevelWrapper": null,
        "_updateBatchNumber": null,
        "_warnedAboutRefsInRender": false,
      },
      "getRenderOutput": [Function],
      "render": [Function],
    },
    "root": [Circular],
    "unrendered": <TaskList
      onDeleteClick={[Function]}
      tasks={
            Array [
                  Object {
                    "id": "batmanId",
                    "text": "The Dark Knight",
                    "title": "Batman",
                  },
                  Object {
                    "id": "supermanId",
                    "text": "Wears red underwear",
                    "title": "Superman",
                  },
                ]
      }
/>,
  },
  "unrendered": null,
}
`;

exports[`should render one component per task 2`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Task
    id="supermanId"
    onDeleteClick={[Function]}
    text="Wears red underwear"
    title="Superman"
/>,
  "nodes": Array [
    <Task
      id="supermanId"
      onDeleteClick={[Function]}
      text="Wears red underwear"
      title="Superman"
/>,
  ],
  "options": Object {},
  "renderer": null,
  "root": ShallowWrapper {
    "complexSelector": ComplexSelector {
      "buildPredicate": [Function],
      "childrenOfNode": [Function],
      "findWhereUnwrapped": [Function],
    },
    "length": 1,
    "node": <glamorous(div)>
      <Task
            id="batmanId"
            onDeleteClick={[Function]}
            text="The Dark Knight"
            title="Batman"
      />
      <Task
            id="supermanId"
            onDeleteClick={[Function]}
            text="Wears red underwear"
            title="Superman"
      />
</glamorous(div)>,
    "nodes": Array [
      <glamorous(div)>
        <Task
                id="batmanId"
                onDeleteClick={[Function]}
                text="The Dark Knight"
                title="Batman"
        />
        <Task
                id="supermanId"
                onDeleteClick={[Function]}
                text="Wears red underwear"
                title="Superman"
        />
</glamorous(div)>,
    ],
    "options": Object {},
    "renderer": ReactShallowRenderer {
      "_instance": ShallowComponentWrapper {
        "_calledComponentWillUnmount": false,
        "_compositeType": 2,
        "_context": Object {},
        "_currentElement": <TaskList
          onDeleteClick={[Function]}
          tasks={
                    Array [
                              Object {
                                "id": "batmanId",
                                "text": "The Dark Knight",
                                "title": "Batman",
                              },
                              Object {
                                "id": "supermanId",
                                "text": "Wears red underwear",
                                "title": "Superman",
                              },
                            ]
          }
/>,
        "_debugID": 1,
        "_hostContainerInfo": null,
        "_hostParent": null,
        "_instance": StatelessComponent {
          "_reactInternalInstance": [Circular],
          "context": Object {},
          "props": Object {
            "onDeleteClick": [Function],
            "tasks": Array [
              Object {
                "id": "batmanId",
                "text": "The Dark Knight",
                "title": "Batman",
              },
              Object {
                "id": "supermanId",
                "text": "Wears red underwear",
                "title": "Superman",
              },
            ],
          },
          "refs": Object {},
          "state": null,
          "updater": Object {
            "enqueueCallback": [Function],
            "enqueueCallbackInternal": [Function],
            "enqueueElementInternal": [Function],
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
            "validateCallback": [Function],
          },
        },
        "_mountOrder": 1,
        "_pendingCallbacks": null,
        "_pendingElement": null,
        "_pendingForceUpdate": false,
        "_pendingReplaceState": false,
        "_pendingStateQueue": null,
        "_renderedComponent": NoopInternalComponent {
          "_currentElement": <glamorous(div)>
            <Task
                        id="batmanId"
                        onDeleteClick={[Function]}
                        text="The Dark Knight"
                        title="Batman"
            />
            <Task
                        id="supermanId"
                        onDeleteClick={[Function]}
                        text="Wears red underwear"
                        title="Superman"
            />
</glamorous(div)>,
          "_debugID": 2,
          "_renderedOutput": <glamorous(div)>
            <Task
                        id="batmanId"
                        onDeleteClick={[Function]}
                        text="The Dark Knight"
                        title="Batman"
            />
            <Task
                        id="supermanId"
                        onDeleteClick={[Function]}
                        text="Wears red underwear"
                        title="Superman"
            />
</glamorous(div)>,
        },
        "_renderedNodeType": 1,
        "_rootNodeID": 0,
        "_topLevelWrapper": null,
        "_updateBatchNumber": null,
        "_warnedAboutRefsInRender": false,
      },
      "getRenderOutput": [Function],
      "render": [Function],
    },
    "root": [Circular],
    "unrendered": <TaskList
      onDeleteClick={[Function]}
      tasks={
            Array [
                  Object {
                    "id": "batmanId",
                    "text": "The Dark Knight",
                    "title": "Batman",
                  },
                  Object {
                    "id": "supermanId",
                    "text": "Wears red underwear",
                    "title": "Superman",
                  },
                ]
      }
/>,
  },
  "unrendered": null,
}
`;
